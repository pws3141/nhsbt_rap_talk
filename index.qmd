---
title: NHS R Conference
subtitle: What was it about?
author: "[Paul Smith](mailto:paul.smith9@nhsbt.nhs.uk)"
date: 2024-12-09
date-format: "MMM D, YYYY"
format:
  revealjs:
    footer: "<https://pws3141.github.io/nhsbt_rap_talk/>"
execute:
  echo: false
  warning: false
logo: https://nhsbtdbe.blob.core.windows.net/umbraco-assets-corp/3760/nhsbt-left-align_scaled.svg
brand: _brand.yml
editor: source
---

# The conference

## Some information

::: {.column width="60%"}
```{r}
#| fig-width: 5

library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=-1.910510, lat=52.478062, popup="The ICC") %>%
  addMarkers(lng=-1.912550, lat=52.476551, popup="Leonardo Royal Hotel")
```
:::

::: {.column width="40%"}

::: {.fragment .fade-in}
![](fig/birmingham.jpg)
:::
:::

:::{.notes}
- organised by NHS-R Community and NHS.pycom
- mostly short 15 minute presentations 
- mixture of implementing statistical methods and data pipeline
:::

## But why R? {.smaller auto-animate=true}

::: {.incremental}
- Open source: free and large community to learn from
- Big presence on GitHub:
  - large community to learn, share code
  - lots of NHS organisations already there: we can work with them
- Better (and easier) data visualisation
- Quarto / Rmarkdown allows very easy integration of comments, codes and visualisations
  - can output to html, pdf and word all from one document
:::

## But why R? {.smaller auto-animate=true}
- Quarto / Rmarkdown allows very easy integration of comments, codes and visualisations
  - can output to html, pdf and word all from one document
  
![](./fig/rstudio-hello.png){fig-align="center"}

## But why R?

::: {.fragment .fade-in}
![](./fig/sas_streamchart.jpg){fig-align="center"}
:::

## But why R?


```{r}
#| cache: true

# Libraries
library(tidyverse)
library(babynames)
library(streamgraph)
```

```{r}
#| echo: true
#| code-fold: true
#| cache: true
#| code-line-numbers: "|7-9"
# filter dataset
data <- babynames %>%
  filter(name %in% c("Ashley", "Amanda", "Jessica",    "Patricia", "Linda", "Deborah",   "Dorothy", "Betty", "Helen")) %>%
  filter(sex=="F")

# plot
data %>%
  streamgraph(key="name", value="n", date="year") %>%
  sg_fill_brewer("BuPu")
```


## The Talks {.smaller .scrollable}

::: {.panel-tabset}

### Day 1
```{r}
df <- kableExtra::kbl(tibble::tribble(
  ~Time, ~Title, ~Speaker,
  "09:45 – 09:55", "Welcome and Housekeeping", "Zoë Turner",
  "09:55 – 10:20", "RAPping my head against a databricks wall", "Louise Schreuders",
  "10:20 – 10:35", "Reducing mental health inequalities among the BAME residents of Herefordshire and Worcestershire communities", "Oluwatimilehin Olabamiyo",
  "10:35 – 11:00", "Simplifying development of AI applications integrated in EHRs with Health Chain", "Jennifer Jiang-Kells",
  "11:00 – 11:15", "Beyond the dashboard: R for value added insights", "Nicola Farthing",
  "11:45 – 12:00", "Reimagining NHS dashboards: an open-source approach with plotly-dash", "Jennifer Struthers",
  "12:00 – 12:25", "Using Machine Learning and secondary care activity data to identify risk of cancer earlier", "Scarlett Kynoch",
  "12:25 – 12:40", "The patient does not exist – generating synthetic patient data with Wasserstein GAN", "Simon Newey",
  "12:40 – 13:05", "Streamlining machine learning development at the NHS via open-source tools", "Elias Altrabsheh and James Sibbit",
  "13:05 – 13:07", "rainbowR", "Ella Kaye",
  "13:55 – 14:10",
  "What insights did Glasgow Scottish Ambulance Service (SAS) gain from combining multiple data sources about all chest pain patients from 2023? We'll present about the process and findings of a 1-year long MSc dissertation project.", "Katalin Koszegi",
  "14:10 – 14:25",
  "Predictive Modelling for health and social care capacity planning using open data", "Sebastian Fox",
  "14:25 – 14:50", "To explain or predict: how different modelling objectives change how you use the same tools", "Chris Mainey",
  "14:50 – 15:05", "Using Openxlsx2 to automate excel publications", "Ruth Keane",
  "15:35 – 15:50", "What I learnt about (programming) languages by building bilingual websites", "Rosemary Walmsley",
  "15:50 – 16:15", "Leveraging R to implement novel theoretical development in online ‘digital twin’ simulation modelling", "Richard Wood",
  "16:15 – 16:30", "Should I use your package", "Colin Gillespie",
  "16:30 – 16:45", "Cracking open the TiN: how we build a one-stop statistics website using R, GitHub and BigQuery", "Mohan Del",
))

df
```

### Day 2
```{r}
df <- kableExtra::kbl(tibble::tribble(
  ~Time, ~Title, ~Speaker,
  "09:45 – 09:55", "Welcome and Housekeeping", "Zoë Turner",
  "09:55 – 10:20", "The Reusability Crisis in Healthcare Analytics", "Rhian Davies",
  "10:20 – 10:35", "Shift staffing via task load prediction", "Marcos Fabietti",
  "10:35 – 10:50", "Unleashing the power of pathway simulation", "Sammi Rosser",
  "11:15 – 11:40", "New generic tests for cancer – with R is a clinical scientists best friend", "Joe Shaw",
  "11:40 – 11:55", "Beyond automation: a shiny app to maximise analytical impact routine reporting narrative", "Laura Birks",
  "11:55 – 12:10", "Sharpening my Python skills through self-development of web scraping bank complaints data", "Kenneth Quan",
  "12:10 – 12:25", "GitHub as a team sport", "Matt Dray",
  "13:10 – 13:25", "Presenting fingertips in data in a more friendly format", "Rachel Brown",
  "13:25 – 13:50", "A method to apply temporal graph analysis on electronic patient record data to explore healthcare professional patient interaction intensity", "John Booth",
  "13:50 – 14:05", "Deploying a Shiny app with Docker in a Raspberry Pi", "Pablo León Ródenas",
  "14:05 – 14:20", "Estimating flexible hazard rates for C diff recurrence from electronic health records using the SplinHazard Regression package and other methods in R", "Elisabeth Dietz",
  "14:20 – 14:45", "Assessment of patient feedback using Natural Language Processing (NLP) and textual data analysis in R", "Ana Singh",
  "15:15 – 15:40", "Forged in the fire: agile project management lessons from the frontline", "Chris Beeley",
  "15:40 – 15:55", "Community Talk – Turing Way", "Sophia Batchelor",
  "15:55 – 16:05", "Community Talk -NHS.Pycom", "Alex Cheung",
  "16:05 – 16:15", "Closing talk NHS-R Community and raffle", "Zoë Turner",
))

df
```
:::


# RAP

## wRAPping your head around the idea {auto-animate=true}
:::{.column width="70%"}
RAP stands for 

<div style="text-align: center; background-color: #41B6E6; padding: 10px; border-radius: 5px;">
  <strong>Reproducible Analytical Pipeline</strong>
</div>

**Aim**: create reproducible code to streamline a
repetitive process such as regular reports or statsitcal analysis.

:::

:::{.column width="25%"}
![](fig/mario.gif)
:::

## wRAPping your head around the idea {auto-animate=true}
:::{.column width="25%"}
![](fig/mario.gif)
:::

:::{.column width="70%"}
Key ideas of RAP:

::: {.incremental}
- Automation
- Modular, re-usable code
- Transparency
- Open Standards and Tools
- Version Control
:::
:::


::: {.fragment .fade-in-then-out}
![](fig/manual_version_control.jpg){.absolute bottom=0 right=30 width="461" height="181"}
:::


:::{.notes}
RAPs are automated analytical processes including everything from initial data extract, data cleaning, analysis and modelling to visualisation and reporting. What’s special about a RAP is that it’s designed to ensure reproducibility, quality and efficiency.

RAP principals:

- Automation:
  - Faster processes: Much faster to get the computer to do all the work!
  - More resource: Free up analyst time to work on other things
  - Accuracy: Reduces the risk of human error
- Modular, re-usable code
  - Avoid repetition: For example if you need to suppress counts in multiple places in your script, you can just call the function each time - no need to copy and paste the same code in several places
  - Re-usability: Easier to re-use code in other work, speeding up the development of future projects
  - Integration: Easier to "slot in" other people's functions - no need to reinvent the wheel if a solution already exists!
  - Faster on-boarding: Code is easier to understand, so new users can get up to speed faster
- Transparency:
  - Improve public trust: through transparency of our processes
  - Identify mistakes: More eyes on the code makes it more likely that mistakes will be spotted
  - Feedback: Readers of the code are able to suggest and make improvements to it
  - Collaboration: Increases collaboration and knowledge sharing
- Open source
  - Free: open-source tools are completely free to use
  - Support: they tend to have a very active community of helpful people to seek advice and support from
  - Reusability: anyone can run open-source code, you don’t need to be a fellow user of a proprietary system. This makes it easier to share work across teams and organisations
  - Use other people's code: Reusability goes both ways! We can take advantage of the libraries, packages, and other code made by others  
- Version Control:
  - Auditability: Create an audit trail of changes made, logging what changes were made when and by whom
  - Roll backs: Enable users to revert changes, or roll back to previous versions
  - Enhanced collaboration: Makes collaboration on coding projects much easier
  - Code quality: Makes it easier to peer-review code for quality and reliability
  - Transparency: Enables code to be shared more easily, using cloud services like GitHub or GitLab.
:::

## wRAPping your head around the idea {auto-animate=true}
:::{.column width="50%"}
Key ideas of RAP:

- Automation
- Modular, re-usable code
- Transparency
- Open Standards and Tools
- Version Control
:::

:::{.column width="50%"}
![](fig/rap.png)
:::

## That's not a RAP


::: {.fragment .semi-fade-out}
![](fig/eninem.gif){.absolute top=0 right=0}
:::

::: {.fragment .fade-in}

```{mermaid}
flowchart LR
  A[Data Store] --> B(SAS)
  B --> |Sometimes automated?| C(Word)
  B -.-> D(Excel?) -.-> C
  C --> E(PDF)
  F{Quality Assurance} --> B 
  F --> C
  H{Quality Assurance} --> E
  E --> G[Published]

  subgraph Loop["Repeat every time <br> data or analysis changes"]
    B
    C
    D
    F
  end
  
  style Loop fill:none,stroke:#000,stroke-width:2px;
```

:::

:::{.notes}
The non-RAP way
Let's compare this to the current state of play that we are trying to move beyond with RAP. Imagine a publication process that doesn’t use the principles above. It might involve:

- Manually running queries against a data store to retrieve, join, and clean the data
- Exporting the data and manually importing it into another statistical or analysis package
- Creating some statistics/outputs
- Manually copying these to an Excel/Word/PDF report

The gist is: a processes requiring a lot of manual steps, and usually using proprietary software.

This has several downsides such as:

- Time consuming: manual steps are time consuming, not only to carry out, but because they introduce a point where further manual quality assurance (QA) is needed
- Potential for error: Fiddly manual steps introduce the possibility of human error. Lack of tests mean we can't be completely sure how future changes affect the old code
- Scalability: If you need to add a new table or statistic to the publication, the process will take longer to complete
- Difficult to extend: Code written on in a non-modular way using proprietary systems is harder to extend when changes need to be made
:::

## But why bother?

:::{.r-fit-text}
[**The Sudlow Review**: 'Uniting the UK’s Health Data: A Huge Opportunity for Society'](https://www.hdruk.ac.uk/helping-with-health-data/the-sudlow-review/){preview-link="true" style="text-align: center"} <br/>
an independent review commissioned by the Chief Medical Officer for England, the UK National Statistician and NHS England’s National Director for Transformation.
:::

::: {.fragment .fade-in}
:::: {style="background-color: #eaeaea"}
*Stakeholders’ highest priorities for improvements...in the health data ecosystem... <br/>
- **Improve data usability**: the implementation of open, shareable and reproducible approaches to data management, curation and analysis pipelines will drive transparency and efficiency, and reduce duplication of effort*
:::
:::


## But why bother?

:::{.r-fit-text}
[**Better, broader, safer**: using health data for research and analysis](https://www.gov.uk/government/publications/better-broader-safer-using-health-data-for-research-and-analysis) <br/>
review into how the efficient and safe use of health data for research and analysis can benefit patients.
:::

::: {.fragment .fade-in}
:::: {style="background-color: #eaeaea"}
*Summary recommendations <br/>
7. Promote and resource ‘Reproducible Analytical Pathways’ as the **minimum standard** for academic and NHS data analysis: this will produce high quality, shared, reviewable, re-usable, well-documented code for data curation and analysis; minimise inefficient duplication; avoid unverifiable ‘black box’ analyses; and make each new analysis faster.*
:::
:::

## Some reading {.smaller}

- NHS Digital [RAP website](https://nhsdigital.github.io/rap-community-of-practice/), including information on different ['RAP levels'](https://nhsdigital.github.io/rap-community-of-practice/introduction_to_RAP/levels_of_RAP/){preview-link="true" style="text-align: center"}
- NHS England [blog post](https://digital.nhs.uk/blog/data-points-blog/2023/why-were-getting-our-data-teams-to-rap)
- Government Analysis Function [RAP strategy](https://analysisfunction.civilservice.gov.uk/policy-store/reproducible-analytical-pipelines-strategy/)
- Government Data Science [RAP Companion](https://ukgovdatascience.github.io/rap_companion/)
- Office for Statistic Regulation: [Overcoming barriers to adoption](https://osr.statisticsauthority.gov.uk/publication/reproducible-analytical-pipelines-overcoming-barriers-to-adoption/)
- RAP with R [book](https://raps-with-r.dev/intro.html)
- DfT [RAP Implementation Plan](https://www.gov.uk/government/publications/standards-for-official-statistics-published-by-the-department-for-transport/analysis-function-rap-strategy-2023-implementation-plan-at-dft)
